services:
    #custom sonata services to handle upload for video elements
    sonata.media.filesystem.s3_video:
        class: Gaufrette\Filesystem
        arguments:
            - @sonata.media.adapter.filesystem.s3_video

    sonata.media.adapter.filesystem.s3_video:
        class: Gaufrette\Adapter\AwsS3
        arguments:
            - @sonata.media.adapter.service.s3
            - %s3_video_bucket_name%
            - {create: false, region: %s3_video_region%, directory: '', 'ACL': 'owner_full_control'}

    sonata.media.cdn.server_video:
        class: Sonata\MediaBundle\CDN\Server
        arguments:
            - http://%s3_video_bucket_name%.s3-website-%s3_video_region%.amazonaws.com

    sonata.media.provider.video:
        class: Application\Sonata\MediaBundle\Provider\VideoProvider
        tags:
            - { name: sonata.media.provider }
        arguments:
            - sonata.media.provider.video
            - @sonata.media.filesystem.s3_video
            - @sonata.media.cdn.server_video
            - @sonata.media.generator.default
            - @sonata.media.thumbnail.format
            - ['mp4', 'mov']
            - ['video/mp4', 'video/quicktime', 'application/octet-stream']

    # custom sonata service to handle upload for audio elements
    sonata.media.filesystem.s3_audio:
        class: Gaufrette\Filesystem
        arguments:
            - @sonata.media.adapter.filesystem.s3_audio

    sonata.media.adapter.filesystem.s3_audio:
        class: Gaufrette\Adapter\AwsS3
        arguments:
            - @sonata.media.adapter.service.s3
            - %s3_audio_bucket_name%
            - {create: false, region: %s3_audio_region%, directory: '', 'ACL': 'owner_full_control'}

    sonata.media.cdn.server_audio:
        class: Sonata\MediaBundle\CDN\Server
        arguments:
            - http://%s3_audio_bucket_name%.s3-website-%s3_audio_region%.amazonaws.com

    sonata.media.provider.audio:
        class: Application\Sonata\MediaBundle\Provider\VideoProvider
        tags:
            - { name: sonata.media.provider }
        arguments:
            - sonata.media.provider.video
            - @sonata.media.filesystem.s3_audio
            - @sonata.media.cdn.server_audio
            - @sonata.media.generator.default
            - @sonata.media.thumbnail.format
            - ['mp3']
            - ['audio/mpeg', 'audio/mp3']


    # custom sonata service to handle upload for archive elements
    sonata.media.filesystem.s3_archive:
        class: Gaufrette\Filesystem
        arguments:
            - @sonata.media.adapter.filesystem.s3_archive

    sonata.media.adapter.filesystem.s3_archive:
        class: Gaufrette\Adapter\AwsS3
        arguments:
            - @sonata.media.adapter.service.s3
            - %s3_archive_bucket_name%
            - {create: false, region: %s3_archive_region%, directory: '', 'ACL': 'owner_full_control'}

    sonata.media.cdn.server_archive:
        class: Sonata\MediaBundle\CDN\Server
        arguments:
            - http://%s3_archive_bucket_name%.s3-website-%s3_archive_region%.amazonaws.com

    sonata.media.provider.archive:
        class: Sonata\MediaBundle\Provider\FileProvider
        tags:
            - { name: sonata.media.provider }
        arguments:
            - sonata.media.provider.archive
            - @sonata.media.filesystem.s3_archive
            - @sonata.media.cdn.server_archive
            - @sonata.media.generator.default
            - @sonata.media.thumbnail.format
            - ['zip']
            - ['application/zip']

    # custom sonata service to handle upload for pdf elements
    sonata.media.filesystem.s3_pdf:
        class: Gaufrette\Filesystem
        arguments:
            - @sonata.media.adapter.filesystem.s3_pdf

    sonata.media.adapter.filesystem.s3_pdf:
        class: Gaufrette\Adapter\AwsS3
        arguments:
            - @sonata.media.adapter.service.s3
            - %s3_pdf_bucket_name%
            - {create: false, region: %s3_pdf_region%, directory: '', 'ACL': 'owner_full_control'}

    sonata.media.cdn.server_pdf:
        class: Sonata\MediaBundle\CDN\Server
        arguments:
            - http://%s3_pdf_bucket_name%.s3-website-%s3_pdf_region%.amazonaws.com

    sonata.media.provider.pdf:
        class: Sonata\MediaBundle\Provider\FileProvider
        tags:
            - { name: sonata.media.provider }
        arguments:
            - sonata.media.provider.pdf
            - @sonata.media.filesystem.s3_pdf
            - @sonata.media.cdn.server_pdf
            - @sonata.media.generator.default
            - @sonata.media.thumbnail.format
            - ['pdf']
            - ['application/pdf']

    #override sonata_media_type to add an option to show/hide the unlink button
    sonata.form.type_extension.media:
        class: Application\Sonata\MediaBundle\Form\Extension\MediaTypeExtension
        tags:
            -
                name: form.type_extension
                alias: sonata_media_type