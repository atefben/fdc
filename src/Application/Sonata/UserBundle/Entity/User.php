<?php

/**
 * This file is part of the <name> project.
 *
 * (c) <yourname> <youremail>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Application\Sonata\UserBundle\Entity;

use Base\AdminBundle\Component\Admin\Export;
use Sonata\UserBundle\Entity\BaseUser as BaseUser;

/**
 * This file has been generated by the Sonata EasyExtends bundle ( http://sonata-project.org/bundles/easy-extends )
 *
 * References :
 *   working with object : http://www.doctrine-project.org/projects/orm/2.0/docs/reference/working-with-objects/en
 *
 * @author <yourname> <youremail>
 */
class User extends BaseUser
{
    /**
     * @var integer $id
     */
    protected $id;

    protected $sites;
    
    /**
     * Get id
     *
     * @return integer $id
     */
    public function getId()
    {
        return $this->id;
    }
    
    /**
     * Add Site
     *
     * @param \Base\CoreBundle\Entity\Site $site
     * @return Article
     */
    public function addSite(\Base\CoreBundle\Entity\Site $site)
    {
        $this->sites[] = $site;

        return $this;
    }

    /**
     * Remove site
     *
     * @param \Base\CoreBundle\Entity\Site $site
     */
    public function removeSite(\Base\CoreBundle\Entity\Site $site)
    {
        $this->sites->removeElement($site);
    }

    /**
     * Get footerVideos
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getSites()
    {
        return $this->sites;
    }



    public function getExportCreatedAt()
    {
        return Export::formatDate($this->getCreatedAt());
    }

    public function getExportGroup()
    {
        return implode(', ', $this->getGroupNames());
    }

    public function getExportUpdatedAt()
    {
        return Export::formatDate($this->getUpdatedAt());
    }

    public function getExportLastLogin()
    {
        return Export::formatDate($this->getLastLogin());
    }

    public function getExportEnabled()
    {
        return Export::yesOrNo($this->isEnabled());
    }
}