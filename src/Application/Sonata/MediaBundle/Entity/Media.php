<?php

/**
 * This file is part of the <name> project.
 * (c) <yourname> <youremail>
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Application\Sonata\MediaBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Sonata\MediaBundle\Entity\BaseMedia as SonataBaseMedia;

/**
 * This file has been generated by the Sonata EasyExtends bundle ( http://sonata-project.org/bundles/easy-extends )
 * References :
 *   working with object : http://www.doctrine-project.org/projects/orm/2.0/docs/reference/working-with-objects/en
 * @author <yourname> <youremail>
 */
class Media extends SonataBaseMedia
{
    /**
     * @var integer $id
     */
    protected $id;

    protected $soifId;

    protected $projectionMedias;

    protected $filmMedias;

    protected $sites;

    protected $pressGuideWidgetAudios;

    protected $parentVideoTranslation;

    protected $parentAudioTranslation;

    private $thumbsGenerated = false;
    private $ignoreListener = false;
    private $oldMediaPhoto;

    public function __construct()
    {
        $this->enabled = true;
    }

    /**
     * Get id
     * @return integer $id
     */
    public function getId()
    {
        return $this->id;
    }

    public function setSoifId($soifId)
    {
        $this->soifId = $soifId;
    }

    public function getSoifId()
    {
        return $this->soifId;
    }

    /**
     * Set parentVideoTranslation
     * @param \Base\CoreBundle\Entity\MediaVideoTranslation $parentVideoTranslation
     * @return Media
     */
    public function setParentVideoTranslation(\Base\CoreBundle\Entity\MediaVideoTranslation $parentVideoTranslation = null)
    {
        $this->parentVideoTranslation = $parentVideoTranslation;

        return $this;
    }

    /**
     * Get parentVideoTranslation
     * @return \Base\CoreBundle\Entity\MediaVideoTranslation
     */
    public function getParentVideoTranslation()
    {
        return $this->parentVideoTranslation;
    }

    /**
     * Set parentAudioTranslation
     * @param \Base\CoreBundle\Entity\MediaAudioTranslation $parentAudioTranslation
     * @return Media
     */
    public function setParentAudioTranslation(\Base\CoreBundle\Entity\MediaAudioTranslation $parentAudioTranslation = null)
    {
        $this->parentAudioTranslation = $parentAudioTranslation;

        return $this;
    }

    /**
     * Get parentAudioTranslation
     * @return \Base\CoreBundle\Entity\MediaAudioTranslation
     */
    public function getParentAudioTranslation()
    {
        return $this->parentAudioTranslation;
    }

    /**
     * Set projectionMedias
     * @param \Base\CoreBundle\Entity\FilmProjectionMedia $projectionMedias
     * @return Media
     */
    public function setProjectionMedias(\Base\CoreBundle\Entity\FilmProjectionMedia $projectionMedias = null)
    {
        $this->projectionMedias = $projectionMedias;

        return $this;
    }

    /**
     * Get projectionMedias
     * @return \Base\CoreBundle\Entity\FilmProjectionMedia
     */
    public function getProjectionMedias()
    {
        return $this->projectionMedias;
    }

    /**
     * Add filmMedias
     * @param \Base\CoreBundle\Entity\FilmMedia $filmMedias
     * @return Media
     */
    public function addFilmMedia(\Base\CoreBundle\Entity\FilmMedia $filmMedias)
    {
        $this->filmMedias[] = $filmMedias;

        return $this;
    }

    /**
     * Remove filmMedias
     * @param \Base\CoreBundle\Entity\FilmMedia $filmMedias
     */
    public function removeFilmMedia(\Base\CoreBundle\Entity\FilmMedia $filmMedias)
    {
        $this->filmMedias->removeElement($filmMedias);
    }

    /**
     * Get filmMedias
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getFilmMedias()
    {
        return $this->filmMedias;
    }

    /**
     * Add galleryHasMedias
     * @param \Application\Sonata\MediaBundle\Entity\GalleryHasMedia $galleryHasMedias
     * @return Media
     */
    public function addGalleryHasMedia(\Application\Sonata\MediaBundle\Entity\GalleryHasMedia $galleryHasMedias)
    {
        $this->galleryHasMedias[] = $galleryHasMedias;

        return $this;
    }

    /**
     * Remove galleryHasMedias
     * @param \Application\Sonata\MediaBundle\Entity\GalleryHasMedia $galleryHasMedias
     */
    public function removeGalleryHasMedia(\Application\Sonata\MediaBundle\Entity\GalleryHasMedia $galleryHasMedias)
    {
        $this->galleryHasMedias->removeElement($galleryHasMedias);
    }

    /**
     * Set thumbsGenerated
     * @param boolean $thumbsGenerated
     * @return Media
     */
    public function setThumbsGenerated($thumbsGenerated)
    {
        $this->thumbsGenerated = $thumbsGenerated;

        return $this;
    }

    /**
     * Get thumbsGenerated
     * @return boolean
     */
    public function getThumbsGenerated()
    {
        return $this->thumbsGenerated;
    }

    /**
     * @return boolean
     */
    public function getIgnoreListener()
    {
        return $this->ignoreListener;
    }

    /**
     * @param boolean $ignoreListener
     * @return Media
     */
    public function setIgnoreListener($ignoreListener)
    {
        $this->ignoreListener = $ignoreListener;
        return $this;
    }

    /**
     * Set oldMediaPhoto
     * @param string $oldMediaPhoto
     * @return $this
     */
    public function setOldMediaPhoto($oldMediaPhoto)
    {
        $this->oldMediaPhoto = $oldMediaPhoto;

        return $this;
    }

    /**
     * Get oldMediaPhoto
     * @return string
     */
    public function getOldMediaPhoto()
    {
        return $this->oldMediaPhoto;
    }
}
